1
00:00:07,320 --> 00:00:10,040
欢迎收看这一期的LGR Oddware

2
00:00:10,100 --> 00:00:15,080
让我们在这档节目中来看一些古老的，被人遗忘的，以及一些过时的软硬件

3
00:00:15,140 --> 00:00:18,820
今天我们要来体验一下这个DECtalk PC

4
00:00:18,870 --> 00:00:22,070
我就让他自己做一个自我介绍吧

5
00:00:22,070 --> 00:00:25,280
"你好，我是DECtalk PC"

6
00:00:25,280 --> 00:00:29,440
"我是一张在90年代初发行的一张扩展卡，我会说很多有趣的'废话'"

7
00:00:29,500 --> 00:00:31,760
"我可以说出你发送的任何指令"

8
00:00:31,760 --> 00:00:33,420
"是的，即使是这样："

9
00:00:33,420 --> 00:00:37,080
"你应该为自己感到羞耻，愚蠢的人类"

10
00:00:37,570 --> 00:00:40,070
这东西非常的好用

11
00:00:40,070 --> 00:00:45,340
事实上是这张卡处理了所有的语音，而外面这个只是一个喇叭

12
00:00:45,340 --> 00:00:47,960
但对于DECtalk这张扩展卡来说，我觉得

13
00:00:47,960 --> 00:00:52,420
显然语音合成本身并不是一个古老或过时的概念

14
00:00:52,490 --> 00:00:56,020
如今我们依然还有各种人工智能助手和语音合成器之类的东西

15
00:00:56,110 --> 00:01:04,010
但是这个插在电脑里的90年代初的东西可是将所有事都在一块板上自主处理的啊

16
00:01:04,010 --> 00:01:06,060
它有它自己的CPU，内存以及其他的一切

17
00:01:06,060 --> 00:01:07,700
真是太疯狂了

18
00:01:07,700 --> 00:01:10,750
这对我来说很有意思，所以就让我们来一起体验一下

19
00:01:10,750 --> 00:01:15,360
让我们仔细看看这个DECtalk PC

20
00:01:15,360 --> 00:01:20,400
一般来说，DEC通常代表Digital Equipment Corporation（数字设备公司）

21
00:01:20,400 --> 00:01:24,540
他们在这几年制造了很多大型而精密的计算机设备

22
00:01:24,540 --> 00:01:29,540
包括DECtalk PC的前身，DTC-01

23
00:01:29,650 --> 00:01:34,620
它可以通过串口连接到各种不同的计算机和终端

24
00:01:34,620 --> 00:01:40,090
这个设备在1984年它要卖4000刀
（折合现在的$11280）

25
00:01:40,090 --> 00:01:43,140
如果按照通货膨胀之后来算大约10000刀吧

26
00:01:43,140 --> 00:01:46,870
考虑到它的能力，该产品肯定取得了成功

27
00:01:46,870 --> 00:01:51,200
但不足为奇的是DECtalk PC显得更具有吸引力

28
00:01:51,200 --> 00:01:58,930
当它在1992年以1195刀的价格售出的时候
（折合现在的$2200）

29
00:01:58,930 --> 00:02:04,750
然而DTC-01和DECtalk PC所使用的底层语音系统是一样的

30
00:02:04,750 --> 00:02:08,340
这套系统在数年中

31
00:02:08,340 --> 00:02:12,800
曾先后被应用到DECtalk，DECvoice，MITalk和KlattTalk

32
00:02:12,800 --> 00:02:17,810
而最后一个KlattTalk的名字则源自于其技术的发明者——Dennis Klatt

33
00:02:17,810 --> 00:02:22,830
他是麻省理工学院言语及听觉科学方面杰出的语言学家和学者

34
00:02:22,830 --> 00:02:26,650
在上世纪七八十年代完成了很多重要工作

35
00:02:26,650 --> 00:02:29,810
他还研究出了将语言拆分

36
00:02:30,000 --> 00:02:34,150
并使得其能完全通过语音合成器进行数字合成的方法

37
00:02:34,150 --> 00:02:38,410
并且深受他自己语音和语调的影响

38
00:02:38,410 --> 00:02:40,720
这是我未曾料到的 虽然这理应在意料之中

39
00:02:40,720 --> 00:02:45,180
让我们来听一听DECtalk合成语音和他自己在朗读同一句话时的对比

40
00:02:45,180 --> 00:02:56,930
“文本转语音系统发展历程中几个关键成果的演示”

41
00:02:57,130 --> 00:03:02,250
可以听出一点口音和被当时批评家津津乐道的口癖

42
00:03:02,250 --> 00:03:08,840
尤其是那在当时新闻界被描述成“兼具印度和瑞典特色”的口音

43
00:03:08,840 --> 00:03:13,780
这口音还有点像喝醉酒甚至是口吃的瑞典人

44
00:03:13,780 --> 00:03:20,510
可尽管如此 这种语音还是被大量地用于电话拨号的按键音

45
00:03:20,520 --> 00:03:23,840
尤其是DTC-01 被内置在了很多通讯设备中

46
00:03:23,840 --> 00:03:25,210
霸占了无数的电话听筒接头

47
00:03:25,210 --> 00:03:34,110
于是它被银行、应急部门、气象电台、教育机构和图书馆所采用

48
00:03:34,110 --> 00:03:38,270
我特别想谈一谈图书馆方面 在过去

49
00:03:38,270 --> 00:03:44,370
当地图书馆通常装配有通过电话告知读者书过了应还日期或出现了账户异常情况的系统

50
00:03:44,370 --> 00:03:48,030
这里就用到了DECtalk系统里的一种 具体是哪一种我也不清楚

51
00:03:48,030 --> 00:03:53,340
于是它变成了亲戚朋友间茶余饭后的笑料 并时常被人模仿

52
00:03:53,340 --> 00:03:58,490
比如 “哦 我们的记录显示你的租借到期了” 这总是把我逗笑

53
00:03:58,490 --> 00:04:02,650
这却是还是很有技术含量的

54
00:04:02,650 --> 00:04:05,720
何况也并不仅仅是被政府和商业界使用

55
00:04:05,720 --> 00:04:13,750
它还被用作辅助盲人和聋哑人获知电脑屏幕上显示的文字信息

56
00:04:13,750 --> 00:04:19,220
需要这种辅助功能的人通常会借助JAWS或Outspoken软件

57
00:04:19,370 --> 00:04:26,250
甚至是使用AWE32声卡的“文本助手”  这是一款创新公司和DEC合作研发的产品

58
00:04:26,250 --> 00:04:29,120
还有像Dynovox这样更加专业化的系统

59
00:04:29,260 --> 00:04:33,160
用户使用时完全不必为软件和键盘这类东西所困扰

60
00:04:33,160 --> 00:04:35,690
系统会提供一个专门的界面

61
00:04:35,890 --> 00:04:42,520
在此界面中 用户可以触摸符号来组建多种在公共场合里常用短语和句子

62
00:04:42,520 --> 00:04:45,170
比如说在快餐店点餐时的常见用语

63
00:04:45,180 --> 00:04:50,170
因此DECtalk也因其越来越好的辅助功能而获得了相当不错的口碑

64
00:04:50,170 --> 00:04:55,560
其中蕴含的技术也在数年内被应用到各种语音合成器中

65
00:04:55,560 --> 00:04:59,470
当然不是所有的文字转语音系统的工作原理都是相同的

66
00:04:59,470 --> 00:05:01,990
却都有一个共同的祖先

67
00:05:01,990 --> 00:05:06,850
在某些上世纪80年代的影视作品中你也能听到DECtalk的合成语音

68
00:05:06,850 --> 00:05:12,810
比如在《霹雳五号》中 一台不是五号的敌方机器人的语音

69
00:05:13,010 --> 00:05:15,660
就是采用DECtalk系统合成的

70
00:05:15,670 --> 00:05:23,000
“玻璃杯中加入冰块，再倒入杜松子酒和奎宁水，最后挤几滴柠檬汁”

71
00:05:23,330 --> 00:05:25,170
“Mariner博士，您的鸡尾酒好了”

72
00:05:25,180 --> 00:05:26,480
“3Q，2号”

73
00:05:26,480 --> 00:05:30,250
或许你还想得起《回到未来II》中的机器人的声音

74
00:05:30,250 --> 00:05:34,700
就是在“未来”中Marty吹干他的速干夹克时的那一幕

75
00:05:34,700 --> 00:05:36,840
“开启烘干模式”

76
00:05:37,040 --> 00:05:38,230
“夹克干燥中……”

77
00:05:39,200 --> 00:05:41,010
“现在你的夹克干爽如初了”

78
00:05:41,010 --> 00:05:42,750
没错 那里也是DECtalk的声音

79
00:05:42,750 --> 00:05:48,880
那几年里你听到的大多数机器人的声音都是基于此技术的

80
00:05:48,880 --> 00:05:53,040
事实上 大家最熟悉的DECtalk合成语音

81
00:05:53,140 --> 00:05:55,610
应该是史蒂芬·霍金的那标志性的声音

82
00:05:55,610 --> 00:06:00,070
一定程度上使用了DECtalk 但比那还要复杂一些

83
00:06:00,270 --> 00:06:05,860
其实在1988年他最初使用的语音系统来自一家叫作Speech Plus的公司

84
00:06:05,860 --> 00:06:08,940
那是一款叫做Calltext 5010的产品

85
00:06:08,940 --> 00:06:13,810
它基于与DECtalk同款的MITalk语音系统

86
00:06:13,810 --> 00:06:21,620
只有一种发音 并在接下来的十年里被Speech Plus公司反复修改打磨 最终成为霍金的私人物品

87
00:06:21,720 --> 00:06:25,680
这也就是他继续选择使用这套系统的原因 这是属于他的独一无二的音色

88
00:06:25,680 --> 00:06:30,730
也正是它 于90年代初为我们带来了DECtalk PC这款产品

89
00:06:30,730 --> 00:06:35,120
DECtalk PC是原版DECtalk的阉割版

90
00:06:35,120 --> 00:06:40,250
是移除了内建的电话插孔之类的东西后的产物

91
00:06:40,250 --> 00:06:45,110
仅保留了这个3.5毫米单声道扬声器输出接口

92
00:06:45,110 --> 00:06:46,930
这也是它仅有的输入/输出接口

93
00:06:46,930 --> 00:06:49,560
当然你也可以将它配合调制解调器使用

94
00:06:49,560 --> 00:06:52,820
由于手头没有电话线 我并不打算使用它

95
00:06:52,820 --> 00:06:55,060
但并不代表这样不可以

96
00:06:55,060 --> 00:06:57,000
语音合成依赖于软件

97
00:06:57,000 --> 00:06:59,070
但软件本身不具有语音合成的功能

98
00:06:59,070 --> 00:07:00,970
它提供的信息是交给硬件作合成处理的

99
00:07:00,980 --> 00:07:03,000
我们先来观察一下这些芯片

100
00:07:03,000 --> 00:07:06,030
这是一颗8186 CPU

101
00:07:06,040 --> 00:07:10,190
它是板子上一片专用的x86兼容芯片

102
00:07:10,190 --> 00:07:16,600
此外还有1MB的RAM芯片 用来加载软件所需的资源

103
00:07:16,600 --> 00:07:19,440
这里有许多德州仪器的芯片

104
00:07:19,640 --> 00:07:23,170
像这个TMS 320数字信号处理器（DSP）

105
00:07:23,180 --> 00:07:26,130
上面所有的芯片都标注着1993年

106
00:07:26,130 --> 00:07:28,210
我认为某些芯片是被升级过的

107
00:07:28,220 --> 00:07:30,370
因为我能辨认出来的芯片都是装在插座中的

108
00:07:30,370 --> 00:07:33,250
板子是1991年制造的

109
00:07:33,250 --> 00:07:37,070
这意味着它拥有九个预设的发音

110
00:07:37,070 --> 00:07:42,750
完全可以自行调节 甚至可以定制你自己的发音

111
00:07:42,750 --> 00:07:45,830
可以创造一个完全属于自己的声音

112
00:07:45,830 --> 00:07:48,960
是DECtalk最吸引用户的一项功能

113
00:07:48,970 --> 00:07:51,120
以上就是这款产品的历史

114
00:07:51,120 --> 00:07:51,970
以及所有我想介绍的东西了

115
00:07:51,970 --> 00:07:56,820
下面让我们把它装在电脑上 看看它究竟是如何工作的

116
00:07:59,750 --> 00:08:03,100
先来讲一讲硬件方面的配置

117
00:08:03,100 --> 00:08:05,620
我找来了可爱的木纹486电脑

118
00:08:05,820 --> 00:08:08,390
这是一台90年左右的机器

119
00:08:08,390 --> 00:08:11,250
就让我们……呃

120
00:08:11,740 --> 00:08:13,220
这里总是很难拆下

121
00:08:14,930 --> 00:08:17,660
通常来说 板卡由软件来控制

122
00:08:17,660 --> 00:08:23,470
但我们还是要进行一些硬件上的调整 就是这个小拨码开关

123
00:08:23,470 --> 00:08:27,800
根据预设 我觉得IO地址应该设为340

124
00:08:27,800 --> 00:08:31,000
我上次试过了 会导致冲突

125
00:08:31,000 --> 00:08:35,850
于是我就把IO地址设为240了

126
00:08:35,850 --> 00:08:37,540
啊，这儿有排线

127
00:08:41,420 --> 00:08:42,260
这样就行了

128
00:08:44,760 --> 00:08:46,920
确实挺简单的

129
00:08:48,220 --> 00:08:52,280
然后我们把喇叭放在这儿

130
00:08:52,280 --> 00:08:54,230
你可以随便找个喇叭来用

131
00:08:54,230 --> 00:08:58,330
这个单声道喇叭是专门为它设计的

132
00:08:58,330 --> 00:09:00,200
最好还是使用原装配置

133
00:09:00,200 --> 00:09:02,090
放在桌子这儿有点丑

134
00:09:02,090 --> 00:09:03,970
这样就好多了

135
00:09:06,290 --> 00:09:08,810
这个原来是存放软盘的盒子

136
00:09:08,820 --> 00:09:13,850
除了软件之外 一切都安装完毕

137
00:09:13,850 --> 00:09:16,110
软件的安装是又重要 又烦人的工作

138
00:09:16,310 --> 00:09:17,870
现在该干什么了来着

139
00:09:17,870 --> 00:09:20,870
对了 先要进入DECtalk的目录

140
00:09:20,870 --> 00:09:22,830
这可真是件苦差事

141
00:09:22,830 --> 00:09:25,200
很久以前我就拥有了这套硬件

142
00:09:25,200 --> 00:09:30,320
不过找这个版本的主板能用的软件

143
00:09:30,320 --> 00:09:32,480
花了我不少的功夫

144
00:09:32,480 --> 00:09:34,370
我没找到原配的磁盘

145
00:09:34,370 --> 00:09:36,750
我一开始只拿到了板卡 后来又得到了这个

146
00:09:36,750 --> 00:09:38,320
实在是太折磨人了

147
00:09:38,320 --> 00:09:38,960
结果就是这样啦！

148
00:09:39,160 --> 00:09:46,040
现在需要运行这个为我为我的板卡定制的DT.batch文件

149
00:09:46,040 --> 00:09:50,470
首先会进行自检 紧接着是拷贝声音文件

150
00:09:50,470 --> 00:09:53,770
“DECtalk PC 4.2C版正在运行”

151
00:09:53,770 --> 00:09:58,150
就像这样 DECtalk PC 4.2C版软件成功运行了

152
00:09:58,150 --> 00:09:59,360
我们能拿它来干什么呢？

153
00:09:59,360 --> 00:10:06,330
如果我们运行“edit”文本编辑程序 它就能把文本文件朗读出来

154
00:10:06,530 --> 00:10:09,480
比如我想让他说……

155
00:10:13,720 --> 00:10:14,820
然后将它保存为文本文件

156
00:10:15,020 --> 00:10:20,020
软件其实已经载入内存了

157
00:10:20,250 --> 00:10:22,030
只不过是停止运行并驻留在后台而已

158
00:10:22,030 --> 00:10:27,350
于是我们可以将文本文件发送到串口或打印机并口

159
00:10:27,350 --> 00:10:28,840
类似物理打印机接口 但实际上是虚拟的

160
00:10:29,040 --> 00:10:29,960
结果就是这样了

161
00:10:29,970 --> 00:10:36,670
我们将文本文件用“copy”命令拷贝到4号串口 也就是DECtalk PC控制的端口

162
00:10:36,670 --> 00:10:42,100
“大家好！我是DECtalk PC卡，我的声音有点奇怪，但我也没有什么好办法”

163
00:10:42,100 --> 00:10:43,880
“让我们畅所欲言”

164
00:10:43,880 --> 00:10:46,190
“说点废话也行”

165
00:10:46,190 --> 00:10:47,640
这就成了

166
00:10:47,640 --> 00:10:51,340
我们也可以使用DOS系统的打印命令“print”达到相同的目的

167
00:10:51,340 --> 00:10:54,130
将它发送到3号并口

168
00:10:54,870 --> 00:11:01,300
“大家好！我是DECtalk PC卡，我的声音有点奇怪，但我也没有什么好办法”

169
00:11:01,300 --> 00:11:03,090
“让我们畅所欲言”

170
00:11:03,090 --> 00:11:05,560
“说点废话也行”

171
00:11:05,570 --> 00:11:06,860
就是这样了

172
00:11:06,860 --> 00:11:09,040
作为DOS的常驻程序

173
00:11:09,040 --> 00:11:11,770
软件还有另一种用途

174
00:11:11,770 --> 00:11:17,100
它带有DTvoc可执行文件 还挺有意思的

175
00:11:17,110 --> 00:11:19,140
工作原理和Covox Speech有点类似

176
00:11:19,140 --> 00:11:20,500
前方音量很大 先把声音调小

177
00:11:24,570 --> 00:11:26,370
它可以播放这些voc格式的文件

178
00:11:26,370 --> 00:11:29,760
这基本上就是波形文件 可以像兼容型声霸卡一样播放它

179
00:11:29,760 --> 00:11:35,410
但我无法确认需要以哪种时钟频率来播放 它听起来太快了

180
00:11:35,410 --> 00:11:39,200
实际上我需要播放一些我熟悉的音频文件

181
00:11:39,400 --> 00:11:45,560
比如这个《毁灭公爵3D》中“Shake it Baby”的音频片段

182
00:11:46,390 --> 00:11:47,880
实在是太快了

183
00:11:47,880 --> 00:11:50,740
而这是一个来自Sound Blaster Pro的康茄鼓的声音

184
00:11:53,360 --> 00:11:54,280
听起来也不太对

185
00:11:54,280 --> 00:12:00,950
还有一种选择是运行JAWS这种第三方软件

186
00:12:02,340 --> 00:12:08,510
“JAWS 2.31版 序列号 009387 注册到 JAWS免费软件.”

187
00:12:08,510 --> 00:12:11,290
“就绪，C:\JAWS>”

188
00:12:11,290 --> 00:12:13,350
这是某个版本的JAWS

189
00:12:13,550 --> 00:12:18,750
它是一款很受欢迎的DOS与Windows平台上的屏幕阅读器

190
00:12:18,750 --> 00:12:20,100
版本号是2.31

191
00:12:20,100 --> 00:12:22,710
那时候这软件还是免费的

192
00:12:22,710 --> 00:12:24,850
如果你知道去哪儿找 现在这软件在网上还是下得到的

193
00:12:24,850 --> 00:12:26,850
它支持DECtalk PC扩展卡

194
00:12:27,050 --> 00:12:30,280
我刚刚把它安装好了

195
00:12:30,360 --> 00:12:35,520
连带装了些语音设备、合成器和与音频相关的东西

196
00:12:35,520 --> 00:12:37,260
其中很多我都没听说过

197
00:12:37,260 --> 00:12:44,050
无论怎样 自带DECtalk PC的支持是我选择安装和使用它的一个原因

198
00:12:44,050 --> 00:12:46,550
好歹是能用的

199
00:12:46,550 --> 00:12:50,660
“C L S 回车，C:\JAWS>”

200
00:12:50,660 --> 00:12:52,540
它会阅读屏幕上显示的所有东西

201
00:12:52,540 --> 00:12:58,510
很方便 但失控了也会变得危险 比如说

202
00:12:58,510 --> 00:13:00,670
“C盘的卷标是B”

203
00:13:00,670 --> 00:13:04,530
“卷的序列号是4AAA-AC77”

204
00:13:04,530 --> 00:13:05,520
它会读出所有东西

205
00:13:05,520 --> 00:13:06,690
“.../JAWS”

206
00:13:06,890 --> 00:13:11,200
"<DIR> 03-20-19 9:36a."

207
00:13:11,210 --> 00:13:12,040
根本停不下来！

208
00:13:12,040 --> 00:13:15,890
"<DIR> 03-20-10 9:36."

209
00:13:16,410 --> 00:13:17,570
好吧 停下来 别读了

210
00:13:18,400 --> 00:13:21,070
呃……好 我知道啦！

211
00:13:21,070 --> 00:13:22,960
这也就是软件的用途所在

212
00:13:22,970 --> 00:13:25,760
JAWS会读出屏幕上的一切

213
00:13:25,760 --> 00:13:30,350
你可以不依赖视觉 通过耳朵来获取信息

214
00:13:30,350 --> 00:13:33,660
实际上你运行像WordPerfect 6.0这种软件

215
00:13:35,650 --> 00:13:37,750
JAWS也能够兼容

216
00:13:37,750 --> 00:13:41,390
“空格 文件 打开... Shift……”

217
00:13:41,390 --> 00:13:46,980
“检索... 关闭 另存为... 文件管理器..”

218
00:13:46,980 --> 00:13:48,230
你应该知道怎么回事儿了

219
00:13:48,230 --> 00:13:52,050
它会将显示的东西分毫不差地读出来

220
00:13:52,050 --> 00:13:57,050
“L G R 空格 I S 空格 A W S O M E .”（自恋ing）

221
00:13:59,550 --> 00:14:02,940
“K I N D 空格 O F . . .”

222
00:14:02,940 --> 00:14:09,020
然而它不能将内容作为一个句子读出来

223
00:14:09,020 --> 00:14:13,970
如果你想要直接控制硬件 不妨尝试使用一下终端模拟器

224
00:14:14,170 --> 00:14:20,890
正如之前所见 它内置了COM4串口和LPT3打印机接口

225
00:14:20,890 --> 00:14:23,660
不过COM4才是这里的重点所在

226
00:14:23,660 --> 00:14:27,610
如果我们打开像Kermit这种软件

227
00:14:27,610 --> 00:14:33,660
我之前在演示多种连接到电子公告板的方法的时候曾经展示过它

228
00:14:33,660 --> 00:14:35,040
Kermit软件就是用来浏览BBS的

229
00:14:35,040 --> 00:14:37,680
不过也可以将它用作终端模拟器

230
00:14:37,690 --> 00:14:39,950
我觉得它会直接把BIOS代码

231
00:14:39,950 --> 00:14:44,750
或者字里行间这些东西发送给板卡

232
00:14:44,750 --> 00:14:49,820
如果我们设置端口为4号 然后进入软件 不过还没有设置好

233
00:14:49,830 --> 00:14:52,960
不过现在它直接与DECtalk建立了通信

234
00:14:52,960 --> 00:14:57,870
用的是COM4端口和9600波特率

235
00:14:57,870 --> 00:14:59,120
都保持默认设置

236
00:14:59,120 --> 00:15:01,840
并且已经获得本地半双工的回显

237
00:15:01,840 --> 00:15:05,490
接下来指示的是ANSI模式 我用不到ANSI终端模拟
(ANSI编码是一种对ASCII码的拓展)

238
00:15:05,490 --> 00:15:06,540
或许在连接别的终端时要用到

239
00:15:06,540 --> 00:15:08,310
但这不会影响我们的使用

240
00:15:08,320 --> 00:15:13,100
在这种情况下 我们就能让它直接读出我们键入的内容

241
00:15:15,230 --> 00:15:18,770
“有时我想知道人类的未来（雾”

242
00:15:18,770 --> 00:15:19,630
就是这种效果了

243
00:15:19,630 --> 00:15:24,590
此时我们直接发送ASCII文本试一试

244
00:15:24,590 --> 00:15:29,220
由于我手里没有原装的说明书这类东西

245
00:15:29,230 --> 00:15:30,720
尝试着探索一下还是很有意思的

246
00:15:30,920 --> 00:15:35,040
我有的文档都是适用于原版DECtalk的

247
00:15:35,040 --> 00:15:39,540
显然它和DECtalk PC工作起来还是有所差异的

248
00:15:39,540 --> 00:15:43,780
我们想让它说……唔 糟糕 这里打错字了

249
00:15:43,780 --> 00:15:44,810
“大量的”

250
00:15:44,810 --> 00:15:48,060
“S R H K 3 S R H S……的声音采样”

251
00:15:48,070 --> 00:15:50,470
它一本正经地

252
00:15:50,470 --> 00:15:53,720
将每个键入的字母读了出来 在你……

253
00:15:53,920 --> 00:15:55,310
不是按下回车键

254
00:15:55,320 --> 00:15:58,440
而是在输入了某些标点并按下空格键后开始朗读

255
00:15:58,640 --> 00:15:59,800
这与输入的是什么标点没有关系

256
00:15:59,800 --> 00:16:01,050
比如说我这里输入了一个逗号

257
00:16:01,050 --> 00:16:03,930
所以你输入的东西要经过精心的设计

258
00:16:09,970 --> 00:16:12,730
我这里是故意这么做的 所以朗读的结果没有问题

259
00:16:12,730 --> 00:16:13,650
就是这样了

260
00:16:13,650 --> 00:16:15,350
还剩下一件事没有做

261
00:16:15,350 --> 00:16:18,340
那就是像原版DECtalk一样

262
00:16:18,540 --> 00:16:23,650
可以使用方括号和冒号来切换发音

263
00:16:23,650 --> 00:16:25,270
我们现在使用的是Paul发音

264
00:16:25,270 --> 00:16:31,360
如果输入[:nb]命令 后面跟一个空格 就能用Betty发音来朗读

265
00:16:32,290 --> 00:16:35,070
“我是DECtalk Betty，我没有灵魂”

266
00:16:35,270 --> 00:16:36,920
这就是DECtalk Betty发音了

267
00:16:36,920 --> 00:16:40,890
如果我们输入[:nk] 那就会使用DECtalk儿童发音

268
00:16:42,230 --> 00:16:45,930
“我是个80年代的机器孩，我要吃掉你的灵魂～”

269
00:16:46,130 --> 00:16:47,390
真是令人毛骨悚然！

270
00:16:47,390 --> 00:16:53,220
还有些别的发音 比如[:nr]是Rita发音

271
00:16:54,110 --> 00:16:56,320
“我是机器人Rita”

272
00:16:56,320 --> 00:17:00,970
“某天怀着神经质目的的我要毁灭人性！”

273
00:17:00,970 --> 00:17:03,840
如你所闻

274
00:17:03,840 --> 00:17:04,870
还有很多其他的发音呢

275
00:17:04,880 --> 00:17:08,400
让我查一查PDF手册

276
00:17:08,400 --> 00:17:14,190
这是一本DTC-01的PDF手册 它内置了九种发音

277
00:17:14,190 --> 00:17:19,520
有Paul、Betty、Huge、Harry、Frank、Kid、Rita、Ursula和Val

278
00:17:19,520 --> 00:17:20,900
试一试Harry发音吧

279
00:17:22,030 --> 00:17:24,580
“我是Harry，我有毛茸茸的的**”

280
00:17:24,580 --> 00:17:27,930
我喜欢Harry的声音

281
00:17:27,930 --> 00:17:34,260
“听到这个音色让我只想骂人”

282
00:17:34,460 --> 00:17:36,030
再试一试Frail Frank如何？

283
00:17:36,030 --> 00:17:38,200
我猜他应该是像个老人

284
00:17:38,200 --> 00:17:40,740
“Franks是美味的食物，但我也叫Frank”

285
00:17:40,740 --> 00:17:43,560
“对此我表示无语”

286
00:17:44,410 --> 00:17:45,740
我估计是个老人

287
00:17:45,740 --> 00:17:49,000
Uppity Ursula是轻柔的女性发音

288
00:17:49,000 --> 00:17:52,290
“我很轻飘飘的女孩子，我要飘走了”

289
00:17:52,290 --> 00:17:53,190
还有个音色可调的Val发音

290
00:17:53,190 --> 00:17:56,250
这个还是交给你来定义吧

291
00:17:56,250 --> 00:17:57,740
“命令 A……”

292
00:17:57,740 --> 00:17:58,880
唔……

293
00:17:58,880 --> 00:18:01,150
“我在和在坐的各位交流”

294
00:18:01,150 --> 00:18:05,890
我想只有你输入你自己的参数后它才会变得不同

295
00:18:05,900 --> 00:18:12,440
到目前为止 我将其他机器上的命令翻译到这一台上的过程并不是一帆风顺的

296
00:18:12,440 --> 00:18:17,640
换句话说 archive.org这个网站上有个很棒的DTC-01模拟器

297
00:18:17,840 --> 00:18:19,140
它能够完美模拟全部参数

298
00:18:19,140 --> 00:18:22,040
像是硬件本身和终端连接

299
00:18:22,040 --> 00:18:25,160
它将这一切整合在你的指尖上了

300
00:18:25,170 --> 00:18:29,140
使用随便一个现代的浏览器就能体验其中的乐趣

301
00:18:29,340 --> 00:18:30,780
快去看看吧

302
00:18:30,780 --> 00:18:32,440
“这个模拟器相当炫酷！”

303
00:18:32,440 --> 00:18:38,210
“它不仅使你能够使用传统DECtalk的全部音色”

304
00:18:38,210 --> 00:18:42,170
“还让自行控制其他的命令参数成为可能”

305
00:18:42,170 --> 00:18:43,490
“太棒了！”

306
00:18:43,490 --> 00:18:47,690
“也就是说你可以让语音慢下来”

307
00:18:47,690 --> 00:18:52,260
“也可以让它听起来更蠢”

308
00:18:52,260 --> 00:18:58,240
你还可以用这个模拟器来制作DECtalk歌曲

309
00:18:58,240 --> 00:19:00,170
你没听错 只要知道正确的命令

310
00:19:00,170 --> 00:19:01,210
让它唱歌完全不是问题

311
00:19:01,210 --> 00:19:07,600
让DECtalk唱歌 那是另一番稀奇古怪的天地

312
00:19:07,600 --> 00:19:11,110
如果你想看看一些样例 我会把链接放在视频的下方

313
00:19:11,110 --> 00:19:12,850
听起来大概是这样的

314
00:19:12,850 --> 00:19:20,420
“宝宝拉肚子了 毛骨悚然的吓人骷髅”

315
00:19:20,420 --> 00:19:23,010
“让你的背脊直发冷”

316
00:19:23,010 --> 00:19:26,370
“尖叫的头骨惊吓你的灵魂”

317
00:19:26,380 --> 00:19:29,240
“今晚注定是你的末日，我的小马”
(原曲：Spooky Scary Skeletons，歌词略有改动)

318
00:19:29,590 --> 00:19:33,680
视频的最后我要告诉你一条关于DECtalk PC的消息

319
00:19:33,680 --> 00:19:38,170
当时机成熟 我未来还会再次评测它

320
00:19:38,170 --> 00:19:42,240
如果我有充足的理由或遇到了相关的有趣软硬件的话

321
00:19:42,240 --> 00:19:45,680
不过这也只是吸引我的设备之一

322
00:19:45,680 --> 00:19:50,690
我经常以各种形式在多种设备中 尤其是在手机中听到它的故事

323
00:19:50,690 --> 00:19:52,470
我也不知道为何

324
00:19:52,470 --> 00:19:58,240
它被使用了很长时间之后才被抛弃

325
00:19:58,240 --> 00:20:01,200
并在过去的几十年里被其他设备取代

326
00:20:01,200 --> 00:20:08,690
它的替代品是更具优势的和更便宜的文本转语音设备 然而全源自于DECtalk

327
00:20:08,690 --> 00:20:10,920
在某种程度上DECtalk PC

328
00:20:10,920 --> 00:20:17,400
那个将语音合成技术以稍微更可接受的价格带入需要它的家庭的设备

329
00:20:17,600 --> 00:20:19,260
着实值得我们回顾

330
00:20:19,260 --> 00:20:21,180
很棒的东西 不是吗？

332
00:20:24,610 --> 00:20:28,730
如果你和我一样喜欢DECtalk PC的话

333
00:20:28,730 --> 00:20:33,250
那么你一定会喜欢Oddware节目和LGR频道的

334
00:20:33,250 --> 00:20:37,180
频道里每周都会有新视频更新 不妨点个赞吧

336
00:20:37,190 --> 00:20:38,860
定期来逛逛我的空间也不错

338
00:20:39,060 --> 00:20:44,060
一如既往地感谢你的观看！

338
00:20:39,060 --> 00:20:44,060
翻译：某科学的小姚同志  Wenshuanglin  萌萌哒Kims
校对：Buster君  真的很无聊的无聊sama  Wenshuanglin

